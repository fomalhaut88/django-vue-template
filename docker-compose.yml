# General root path: http://localhost:18000/

version: '3.2'

x-common-vars: &common-vars
  BACKEND_ROOT: "/backend"
  FRONTEND_ROOT: "/"

services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: Ael7CaVu
    ports:
      - "15432:5432"
    volumes: 
      - ./tmp/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      args:
        ADMIN_PWD: ieDai3mahgec
    restart: always
    ports:
      - "18001:8000"
    environment:
      <<: *common-vars
      SECRET_KEY: ieN2tohzohwo7ohFongoh0Shaen3hioyeehuyubahw7efoopha
      ALLOWED_HOSTS: "*"
      CSRF_TRUSTED_ORIGINS: http://localhost:18000
      DEBUG: 1
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_DB: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: Ael7CaVu
      STATIC_ROOT: ./tmp/static
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      args: *common-vars
    restart: always
    ports:
      - "18081:80"
    depends_on:
      - backend

  nginx:
    build: ./nginx
    restart: always
    ports:
      - "18000:80"
    environment: *common-vars
    depends_on:
      - db
      - backend
      - frontend
